syntax = "proto3";

package coredef;

// ==========================================================
// 系统消息
// ==========================================================

// 一个连接接入
message SessionAccepted
{
	
}

// 已连接
message SessionConnected
{
	
}

// 连接断开
message SessionClosed
{
	
}

// 端初始化
message PeerInit
{
	
}


// 端启动
message PeerStart
{
	
}

// 端停止
message PeerStop
{
	
}

// ==========================================================
// gate网关
// ==========================================================


// 路由上行数据
// gate -> backend
message UpstreamACK
{
	uint32 MsgID = 1;		// 消息号
	
	bytes Data = 2;		// 用户封包
	
	
	int64 ClientID = 3;	// 玩家在gate的id
}


// 关闭客户端
// backend -> gate
message CloseClientACK
{
	int64 ClientID = 1;
}

// 路由下行数据
// backend -> gate
message DownstreamACK
{
	uint32 MsgID = 1;		// 消息号
	
	bytes Data = 2;		// 用户封包
	
	
	repeated int64 ClientID = 3;	// 要广播的玩家列表
}


// ==========================================================
// RPC
// ==========================================================

// 请求
message RemoteCallREQ
{	                 
	uint32 MsgID = 1;		// 消息号
	
	bytes Data = 2;		// 用户封包
	
	int64 CallID = 3;
}

// 回应
message RemoteCallACK
{
	uint32 MsgID = 1;		// 消息号
	
	bytes Data = 2;		// 用户封包
	
	int64 CallID = 3;
}



// ==========================================================
// 测试用消息
// ==========================================================
message TestEchoACK
{
	string Content = 1;
}
